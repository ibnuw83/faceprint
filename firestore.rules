rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isSignedIn() {
      return request.auth != null;
    }

    // Settings are public read
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId) || isAdmin();
      allow create: if isSignedIn();
      allow delete: if isAdmin();
    }
    
    match /departments/{deptId} {
       allow read: if isSignedIn();
       allow list: if isSignedIn();
       allow create, update, delete: if isAdmin();
    }

    match /attendance/{attendanceId} {
        allow read, list: if isAdmin();
        allow create: if isSignedIn();
        allow delete: if isAdmin();
        
        // Employee can read their own attendance list
        allow list: if exists(/databases/$(database)/documents/users/$(request.auth.uid));
        // Employee can read a specific record if they own it
        allow get: if isOwner(get(/databases/$(database)/documents/attendance/$(attendanceId)).data.uid);
    }
    
     match /leaveRequests/{requestId} {
      allow create: if isSignedIn();
      allow list, read, update, delete: if isAdmin();

      // Employee can list and read their own requests
      allow list: if exists(/databases/$(database)/documents/users/$(request.auth.uid));
      allow get: if isOwner(get(/databases/$(database)/documents/leaveRequests/$(requestId)).data.uid);
      allow update: if isOwner(get(/databases/$(database)/documents/leaveRequests/$(requestId)).data.uid);
    }
  }
}
