
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Settings are publicly readable, but only writable by admins
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Departments are readable by any authenticated user, but only writable by admins
    match /departments/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      // Admins can read/write any user document
      allow get, list, create, update, delete: if isAdmin();
      
      // Authenticated users can read their own document
      allow get: if request.auth.uid == userId;

      // Authenticated users can update their own document, but cannot change their role
      allow update: if request.auth.uid == userId && request.resource.data.role == resource.data.role;
    }

    // Attendance collection rules
    match /attendance/{attendanceId} {
        // Admins can read/write any attendance record
        allow get, list, create, update, delete: if isAdmin();

        // Employees can create their own attendance records
        allow create: if request.auth.uid == request.resource.data.uid;

        // Employees can read their own attendance records
        allow list: if request.auth.uid == request.query.uid;
        allow get: if get(/databases/$(database)/documents/attendance/$(attendanceId)).data.uid == request.auth.uid;
    }

    // Leave Requests collection rules
    match /leaveRequests/{leaveId} {
      // Admins can manage all leave requests
      allow get, list, update, delete: if isAdmin();

      // Employees can create their own leave requests
      allow create: if request.auth.uid == request.resource.data.uid;
      
      // Employees can read their own leave requests
      allow list: if request.auth.uid == request.query.uid;
      allow get: if get(/databases/$(database)/documents/leaveRequests/$(leaveId)).data.uid == request.auth.uid;
    }
  }
}
