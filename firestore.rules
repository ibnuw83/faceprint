rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    function isAdmin() {
      return isSignedIn() && getRole(request.auth.uid) == 'admin';
    }

    // Rules for 'users' collection
    match /users/{userId} {
      // Admins can manage any user. Users can only manage their own profile.
      allow read: if isSignedIn() && (isOwner(userId) || isAdmin());
      
      // Allow new, un-profiled users to create their own document
      allow create: if isOwner(userId);

      // Users can update their own profile. Admins can update any.
      allow update: if isSignedIn() && (isOwner(userId) || isAdmin());
      
      // Only admins can delete users.
      allow delete: if isAdmin();
    }
    
    // Rules for 'departments' collection
    match /departments/{deptId} {
      // Any signed-in user can read the department list.
      allow read: if isSignedIn();
      // Only admins can create, update, or delete departments.
      allow write: if isAdmin();
    }
    
    // Rules for 'leaveRequests' collection
    match /leaveRequests/{requestId} {
      // Users can only see their own requests. Admins can see all.
      allow read: if isSignedIn() && (resource.data.uid == request.auth.uid || isAdmin());
      
      // A user can only create a request for themselves.
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      
      // Only admins can update (approve/reject) requests.
      allow update: if isAdmin();
      
      // Admins can delete requests if necessary.
      allow delete: if isAdmin();
    }

    // Rules for 'attendance' collection
    match /attendance/{attendanceId} {
       // A user can read their own attendance records. Admins can read all.
      allow read: if isSignedIn() && (
        resource.data.employeeId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employeeId || isAdmin()
      );
      
      // A user can only create an attendance record for themselves.
      allow create: if isSignedIn() && request.resource.data.employeeId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employeeId;
      
      // No one can update attendance records. They are immutable.
      allow update: if false;

      // Only admins can delete attendance records.
      allow delete: if isAdmin();
    }

    // Rules for 'settings' collection
    match /settings/{settingId} {
      // All signed-in users can read settings.
      allow read: if isSignedIn();
      // Only admins can change settings.
      allow write: if isAdmin();
    }
  }
}
