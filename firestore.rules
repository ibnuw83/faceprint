
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the incoming request belongs to an admin.
    // This is determined by checking the role on the user's *existing* document in Firestore.
    // It's crucial that this is only used in rules where the user document is guaranteed to exist.
    function isExistingAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Settings: Publicly readable for all users. Only admins can write.
    match /settings/{settingId} {
      allow get, list: if true;
      allow write: if isExistingAdmin();
    }
    
    // Departments: All logged-in users can read the list. Only admins can write.
    match /departments/{departmentId} {
      allow get, list: if request.auth != null;
      allow create, update, delete: if isExistingAdmin();
    }
    
    // Users:
    // - Any authenticated user can check if a user document exists (get).
    // - Users can create their own document.
    // - Users can update their own document.
    // - Admins can perform any action.
    match /users/{userId} {
      allow get: if request.auth != null;
      allow list, delete: if isExistingAdmin();
      allow create: if request.auth.uid == userId; // A user can create their own profile document
      allow update: if request.auth.uid == userId || isExistingAdmin(); // A user can update their own profile, or an admin can
    }

    // Attendance: 
    // - Users can create their own attendance records.
    // - Users can read their own attendance records.
    // - Admins can read all records and delete them.
    match /attendance/{attendanceId} {
      allow read: if request.auth.uid == resource.data.uid || isExistingAdmin();
      allow create: if request.auth.uid == request.resource.data.uid;
      allow update, delete: if isExistingAdmin();
    }

    // Leave Requests:
    // - Users can create and update their own requests.
    // - Users can read their own requests.
    // - Admins can perform any action except creating a request for another user.
    match /leaveRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.uid || isExistingAdmin();
      allow create, update: if request.auth.uid == request.resource.data.uid || isExistingAdmin();
      allow delete: if isExistingAdmin();
    }
  }
}
