rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Users can create their own account data.
      allow create: if request.auth != null;
      
      // Users can read their own data. Admins can read anyone's data.
      allow read: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      
      // Users can update their own data. Admins can update anyone's data.
      allow update: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      
      // Nobody can delete users from the client side.
      allow delete: if false;
    }
    
    // Rules for the 'attendance' collection
    match /attendance/{attendanceId} {
        // Users can only create attendance for themselves.
        allow create: if request.auth != null && request.resource.data.employeeId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employeeId;

        // Admins can read all records. Employees can only read their own.
        allow read: if isAdmin() || (request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employeeId == resource.data.employeeId);

        // Nobody can update records to ensure data integrity.
        allow update: if false;

        // Only admins can delete attendance records.
        allow delete: if isAdmin();
    }
    
    // Rules for 'leaveRequests' collection
    match /leaveRequests/{requestId} {
        // Employees can create requests for themselves.
        allow create: if request.auth.uid == request.resource.data.uid;
        
        // Admins can read all requests. Employees can only read their own.
        allow read: if isAdmin() || request.auth.uid == resource.data.uid;

        // Admins can update any request. Employees can only update the 'acknowledgedByEmployee' field on their own requests.
        allow update: if isAdmin() || (request.auth.uid == resource.data.uid && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['acknowledgedByEmployee']));

        // Nobody can delete requests to maintain history.
        allow delete: if false;
    }

    // Rules for settings documents
    match /settings/{docId} {
      // Anyone authenticated can read settings (like location or schedule)
      allow read: if request.auth != null;
      // Only admins can change settings
      allow write: if isAdmin();
    }
    
     // Rules for departments collection
    match /departments/{deptId} {
       // Anyone authenticated can read the list of departments
      allow read: if request.auth != null;
      // Only admins can create or delete departments
      allow write: if isAdmin();
    }
  }
}
