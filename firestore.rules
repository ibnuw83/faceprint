rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can do anything. Users can read their own data.
      // Users can create their own profile.
      // Users can update their own profile if they are completing it.
      allow read: if isAdmin() || isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isAdmin() || (isOwner(userId) && !resource.data.isProfileComplete);
      allow delete: if isAdmin();
    }

    // Rules for the 'departments' collection
    match /departments/{departmentId} {
      // Only admins can manage departments
      allow read, write: if isAdmin();
    }

    // Rules for the 'attendance' collection
    match /attendance/{attendanceId} {
       // Admins can read all records.
       // Users can only create their own records. No updates/deletes for users.
      allow read: if isAdmin();
      allow create: if isOwner(request.resource.data.uid);
      allow update, delete: if isAdmin();
    }

    // Rules for the 'leaveRequests' collection
    match /leaveRequests/{leaveId} {
        // Admins can read/write everything.
        // Users can create requests for themselves.
        // Users can read their own requests.
      allow create: if isOwner(request.resource.data.uid);
      allow read: if isAdmin() || isOwner(get(/databases/$(database)/documents/leaveRequests/$(leaveId)).data.uid);
      allow update, delete: if isAdmin();
    }

    // Rules for the 'settings' collection
    match /settings/{settingId} {
      // Admins can change settings.
      // All authenticated users can read settings.
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
