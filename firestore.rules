
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Use exists() instead of get() to avoid recursive loops on collections that need this rule.
      // This is safer.
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // `users` collection rules
    match /users/{userId} {
      // An authenticated user can get their own document, admins can get any.
      allow get: if isSignedIn() && (isOwner(userId) || isAdmin());
      // Only admins can list all users.
      allow list: if isAdmin();
      // Anyone can create a user (register).
      allow create: if true; 
      // Users can update their own profile.
      allow update: if isSignedIn() && isOwner(userId);
      // Only admins can delete users.
      allow delete: if isAdmin();
    }

    // `attendance` collection rules
    match /attendance/{docId} {
      allow create: if isSignedIn();
      // A user can only query their own attendance records.
      // Admins can query all records.
      allow list: if isAdmin() || (isSignedIn() && request.query.where.uid == request.auth.uid);
      // Admins can read, update, or delete specific attendance records.
      allow read, update, delete: if isAdmin();
    }

    // `departments` collection rules
    match /departments/{docId} {
      // Only admins can read and write departments.
      allow read, write: if isAdmin();
    }
    
    // `settings` collection rules
    match /settings/{docId} {
        // Allow public read for settings needed on login/landing page.
        allow get: if true;
        // Only admins can write settings.
        allow write: if isAdmin();
        allow list: if isAdmin();
    }
    
    // `leaveRequests` collection rules
    match /leaveRequests/{docId} {
        // Users can create their own leave requests.
        allow create: if isSignedIn();
        // A user can only query their own leave requests. Admins can query all.
        allow list: if isAdmin() || (isSignedIn() && request.query.where.uid == request.auth.uid);
        // Admins can update or delete any request. Users can read/get their own.
        allow read, update, delete: if isAdmin() || (isOwner(resource.data.uid));
    }
  }
}
