
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin(userId) {
      // Admin role is stored in the user's document in the 'users' collection
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // Public settings can be read by anyone
    match /settings/{settingId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // The 'users' collection can be read by the user themselves or by an admin.
    // Any authenticated user can create their own user document (during registration).
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow delete: if isAdmin(request.auth.uid);
    }

    // Departments can only be managed by admins.
    match /departments/{departmentId} {
      allow read: if request.auth != null; // All authenticated users can read departments
      allow create, update, delete: if isAdmin(request.auth.uid);
    }
    
    // Attendance records can be created by the user they belong to.
    // They can be read by the user or any admin.
    match /attendance/{attendanceId} {
      allow read: if request.auth.uid == resource.data.uid || isAdmin(request.auth.uid);
      allow create: if request.auth.uid == request.resource.data.uid;
      allow delete: if isAdmin(request.auth.uid);
    }

    // Leave requests follow similar logic to attendance.
    match /leaveRequests/{leaveId} {
       allow read: if request.auth.uid == resource.data.uid || isAdmin(request.auth.uid);
       allow create: if request.auth.uid == request.resource.data.uid;
       allow update, delete: if isAdmin(request.auth.uid);
    }

    // All other collections are locked down by default.
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
