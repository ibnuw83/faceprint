
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Settings are public read for app configuration
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Departments are public read, only admin can write
    match /departments/{deptId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      // Admins can read/write any user document
      // Users can only read/write their own document
      allow read, write: if isAdmin() || isOwner(userId);
      // Any authenticated user can create a user document (for registration)
      allow create: if request.auth != null;
    }

    // Attendance collection rules
    match /attendance/{attendanceId} {
      // Admin can do anything
      // Authenticated users can create records
      allow create: if request.auth != null;
      // Admin can read/update/delete any record. Users can only read their own.
      allow read, update, delete: if isAdmin() || isOwner(request.resource.data.uid);
      // Admins can list all. Authenticated users can only list their own records.
      allow list: if isAdmin() || (request.auth != null && request.query.where.size() > 0 && request.query.where[0].field == 'uid' && request.query.where[0].value == request.auth.uid);
    }
    
    // Leave Requests collection rules
    match /leaveRequests/{leaveId} {
        // Admin can do anything
        // Authenticated users can create their own requests
        allow create: if request.auth.uid == request.resource.data.uid;
        // Admin can update/delete any record.
        allow update, delete: if isAdmin();
        // Admins can list all. Users can only list their own.
        allow list: if isAdmin() || (request.auth != null && request.query.where.size() > 0 && request.query.where[0].field == 'uid' && request.query.where[0].value == request.auth.uid);
        // Admin can read any. Users can read their own.
        allow read: if isAdmin() || isOwner(resource.data.uid);
    }
  }
}
