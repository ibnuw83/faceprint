
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document based on the UID field
    function isOwner(docData) {
      return request.auth.uid == docData.uid;
    }

    // Users collection
    // Admin can read/write any user. Users can read/write their own document.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
      allow list: if isAdmin();
    }

    // Attendance collection
    // Users can create their own attendance records.
    // Admins can read/delete any record.
    match /attendance/{docId} {
      allow create: if isOwner(request.resource.data);
      allow read, delete: if isAdmin();
      
      // Allow users to list their own attendance records.
      // Admins can list all records.
      allow list: if isAdmin() || (request.query.limit <= 10 && request.query.where.uid == request.auth.uid);
    }
    
    // Departments collection
    // Any authenticated user can read departments. Only admins can write.
    match /departments/{deptId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Leave Requests collection
    // Users can create their own requests.
    // Users can read/delete their own requests. Admins can read/delete any.
    // Admins can update any request.
    match /leaveRequests/{reqId} {
       allow create: if isOwner(request.resource.data);
       allow read, delete: if isOwner(resource.data) || isAdmin();
       allow update: if isAdmin();
       allow list: if isAdmin() || request.query.where.uid == request.auth.uid;
    }

    // Settings collection
    // Publicly readable for app configuration on client-side.
    // Only writable by admins.
    match /settings/{setting} {
      allow read: if true; 
      allow write: if isAdmin();
    }
  }
}
