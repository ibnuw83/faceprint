rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(uid) {
      return request.auth.uid == uid;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admin can do anything.
      // A user can read, update their own profile. A user can create their own profile.
      allow read, update: if isAdmin() || isOwner(userId);
      allow create: if isOwner(userId);
      allow delete: if isAdmin();
    }

    // Rules for the 'departments' collection
    match /departments/{departmentId} {
      // Admin can do anything.
      // Any authenticated user can read the list of departments (needed for registration).
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    // Rules for the 'attendance' collection
    match /attendance/{attendanceId} {
       // Admin can read/delete any record.
       // An authenticated user can create a record (clock in/out).
       // A user can only read their own attendance records.
       allow create: if request.auth != null;
       allow read, delete: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.uid);
       // No updates allowed to attendance records.
       allow update: if false;
    }

    // Rules for the 'leaveRequests' collection
    match /leaveRequests/{leaveRequestId} {
      // Admin can read/update any record.
      // A user can create a record for themselves.
      // A user can read their own leave requests.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.uid;
      allow read, update: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.uid);
      // No one can delete leave requests from the client.
      allow delete: if false;
    }
    
    // Rules for settings documents
    match /settings/{settingId} {
        // Only admins can read and write settings.
        allow read, write: if isAdmin();
    }
  }
}
