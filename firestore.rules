rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      // Check if the user is authenticated and their document in 'users' has the role 'admin'
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Settings Collection ---
    // Public can read, only admin can write
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // --- Departments Collection ---
    // Authenticated users can read, only admin can write
    match /departments/{deptId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // --- Users Collection ---
    match /users/{userId} {
      // Admins can read/write any user document.
      // Users can read/update their own document.
      allow read, update: if isAdmin() || isOwner(userId);
      // Only admins can create or delete user documents.
      allow create, delete: if isAdmin();
    }

    // --- Attendance Collection ---
    match /attendance/{attendanceId} {
      // Admins can read/delete any attendance record.
      allow read, delete: if isAdmin();
      // Users can create their own attendance record.
      allow create: if isOwner(request.resource.data.uid);
      // Rule to allow collection query by admin or user for their own records
      allow list: if isAdmin() || (isAuthenticated() && request.query.where.field == 'uid' && request.query.where.value == request.auth.uid);
    }
    
    // --- Leave Requests Collection ---
    match /leaveRequests/{requestId} {
        // Admins can read, update, and delete any request.
        allow read, update, delete: if isAdmin();
        
        // Users can create their own requests.
        allow create: if isOwner(request.resource.data.uid);

        // Rule to allow listing requests.
        // Admins can list all requests.
        // Employees can list only their own requests.
        allow list: if isAdmin() || (isAuthenticated() && request.query.where.field == 'uid' && request.query.where.value == request.auth.uid);
    }
  }
}
