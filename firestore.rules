
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Safely check if the signed-in user has the 'admin' role.
    function isAdmin() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Collection Rules ---

    // Users can read their own profile. Admins can read/write all profiles.
    match /users/{userId} {
      allow get: if isSignedIn() && (isOwner(userId) || isAdmin());
      allow list: if isAdmin();
      allow update: if isOwner(userId) || isAdmin();
      allow create: if isSignedIn(); // For user registration
      allow delete: if isAdmin();
    }

    // Attendance: Users can create their own records and list their own history.
    // Admins can manage all records.
    match /attendance/{attendanceId} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow read, update, delete: if isAdmin() || (isSignedIn() && resource.data.uid == request.auth.uid);
      allow list: if isAdmin() || (isSignedIn() && request.query.get('where').get('uid') == request.auth.uid);
    }
    
    // Departments: All signed-in users can read, only admins can write.
    match /departments/{departmentId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Settings: All signed-in users can read, only admins can write.
    match /settings/{settingId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    
    // Leave Requests: Users can manage their own requests. Admins can manage all.
    match /leaveRequests/{requestId} {
       allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
       allow read, update, delete: if isAdmin() || (isSignedIn() && resource.data.uid == request.auth.uid);
       allow list: if isAdmin() || (isSignedIn() && request.query.get('where').get('uid') == request.auth.uid);
    }
  }
}
