rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role from custom claims
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection
    match /users/{userId} {
      // Admin: Can do anything
      // User: Can create their own profile, read their own profile, and update their own profile (but not change their role).
      allow read, delete: if isAdmin();
      allow create: if isOwner(userId);
      allow update: if isAdmin() || (isOwner(userId) && !('role' in request.resource.data));
    }
    
    // All other collections that need admin access and user-specific access
    match /attendance/{docId} {
      // Admin: Can read all attendance records.
      // User: Can create their own attendance records and read their own records.
      allow read: if isAdmin() || request.auth.uid == get(/databases/$(database)/documents/users/$(request.resource.data.uid)).data.uid;
      allow create: if isOwner(request.resource.data.uid);
      allow delete: if isAdmin();
    }

    match /leaveRequests/{docId} {
      // Admin: Can manage all leave requests.
      // User: Can create and read their own leave requests.
      allow read, update, delete: if isAdmin();
      allow create: if isOwner(request.resource.data.uid);
      allow list: if isAdmin(); // Explicitly allow list for admins
      allow get: if isAdmin() || isOwner(get(/databases/$(database)/documents/leaveRequests/$(docId)).data.uid);
    }
    
    // Collections only accessible by Admins
    match /departments/{docId} {
      allow read, write: if isAdmin();
    }
    
    match /settings/{docId} {
      allow read, write: if isAdmin();
    }
  }
}
