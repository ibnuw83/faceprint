rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user has an 'admin' role.
    function isAdmin() {
      // Ensure the user is authenticated before checking their role.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the request is from an authenticated user.
    function isAuthenticated() {
      return request.auth != null;
    }

    // =====================================================================
    // PUBLIC ACCESS RULES
    // =====================================================================
    // These settings documents are needed for the public-facing pages (login, home page)
    // and must be readable by everyone, even unauthenticated users.
    // Writing is still restricted to admins.
    match /settings/{docId} {
        allow get, list: if true;
        allow write: if isAdmin();
    }

    // =====================================================================
    // AUTHENTICATED USER RULES
    // =====================================================================
    
    // USER PROFILES:
    match /users/{userId} {
      // Admins can perform any action on any user profile.
      allow read, write: if isAdmin();
      
      // A user can only read or update their own profile. They cannot delete it.
      // They also cannot create a user document directly here; it's done via Auth.
      allow get, update: if isAuthenticated() && request.auth.uid == userId;
    }

    // DEPARTMENTS: Only admins can manage departments.
    match /departments/{deptId} {
      allow read, create, update, delete: if isAdmin();
    }
    
    // ATTENDANCE RECORDS:
    match /attendance/{attendanceId} {
      // Admins can perform any action on any attendance record.
      allow read, create, update, delete: if isAdmin();
      
      // Authenticated users can create their own attendance records.
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.uid;
      
      // Users can only read their own attendance history.
      allow read: if isAuthenticated() && request.auth.uid == resource.data.uid;
    }

    // LEAVE REQUESTS:
    match /leaveRequests/{leaveId} {
      // Admins can manage all leave requests.
      allow read, create, update, delete: if isAdmin();
      
      // Authenticated users can create, read, and update their own leave requests.
      allow create, read, update: if isAuthenticated() && request.auth.uid == request.resource.data.uid;
    }
  }
}
