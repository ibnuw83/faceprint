
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Helper function to check if the user has an 'admin' role in their existing document
    // This is safe to use for rules on existing documents, but not for creation checks.
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Settings: Publicly readable for all users. Only admins can write.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Departments: All logged-in users can read the list. Only admins can write.
    match /departments/{departmentId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Users:
    // - Any authenticated user can check if a user document exists (get). This is crucial for sign-up.
    // - A user can only create their OWN document.
    // - A user can only update their OWN document.
    // - Admins can do anything except update other users' sensitive data directly (get, list, delete).
    match /users/{userId} {
      allow get: if request.auth != null;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow list, delete: if isAdmin();
    }

    // Attendance: Users can create their own records. They can only read their own records. Admins can read/delete all.
    match /attendance/{attendanceId} {
      allow read: if isOwner(resource.data.uid) || isAdmin();
      allow create: if isOwner(request.resource.data.uid);
      allow update, delete: if isAdmin();
    }

    // Leave Requests: Users can create/update their own. They can read their own. Admins can manage all.
    match /leaveRequests/{requestId} {
      allow read: if isOwner(resource.data.uid) || isAdmin();
      allow create, update: if isOwner(request.resource.data.uid) || isAdmin();
      allow delete: if isAdmin();
    }
  }
}
