
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(uid) {
      return request.auth.uid == uid;
    }
    
    function isAdmin() {
      // Ensure the user document exists before checking the role
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // USERS collection
    match /users/{uid} {
      // Admins can manage any user
      allow read, write: if isAdmin();
      
      // Users can read their own profile
      allow get: if isAuthenticated() && isOwner(uid);

      // Users can create their profile or update it if it's incomplete
      allow create, update: if isAuthenticated() && isOwner(uid) && (
        !exists(/databases/$(database)/documents/users/$(uid)) || 
        get(/databases/$(database)/documents/users/$(uid)).data.isProfileComplete == false
      );
    }

    // DEPARTMENTS collection
    match /departments/{deptId} {
      // All authenticated users can read departments (needed for new employee form)
      allow get, list: if isAuthenticated();
      // Only admins can create, update, or delete departments
      allow write: if isAdmin();
    }

    // SETTINGS collection
    match /settings/{docId} {
        // Admins can change any settings
        allow write: if isAdmin();

        // Anyone can read settings for the public landing page and app layout
        allow get: if docId in ['branding', 'landingPage', 'footer', 'announcement', 'location', 'schedule'];
        allow list: if docId in ['branding', 'landingPage', 'footer', 'announcement', 'location', 'schedule'];
    }

    // LEAVE REQUESTS collection
    match /leaveRequests/{requestId} {
      // Admins can read and update all requests
      allow read, update: if isAdmin();

      // Employees can create requests for themselves
      allow create: if isAuthenticated() && request.resource.data.uid == request.auth.uid;
      
      // Employees can read their own requests (using list/get with a where clause)
      allow read: if isAuthenticated() && getUserData().employeeId == resource.data.employeeId;
    }
    
    // ATTENDANCE collection
    match /attendance/{recordId} {
      // Admins can manage all attendance records
      allow read, delete: if isAdmin();
      
      // Employees can create their own attendance records
      allow create: if isAuthenticated();
      
      // Employees can read their own attendance history
      allow read: if isAuthenticated() && getUserData().employeeId == resource.data.employeeId;
    }
  }
}
