rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Aturan paling permisif di awal untuk dicocokkan
    match /{document=**} {
      allow read, write: if request.auth.token.role == 'admin';
    }

    // Settings: Allow any logged in user to read, only admin to write.
    match /settings/{settingId} {
        allow read: if request.auth != null;
        allow write: if request.auth.token.role == 'admin';
    }

    // Departments: Allow any logged in user to read, only admin to create/delete
    match /departments/{deptId} {
        allow read: if request.auth != null;
        allow create, update, delete: if request.auth.token.role == 'admin';
    }

    // Users:
    // - Users can read and update their own data.
    // - Admin can read/write any user data.
    // - New users (profile not complete) can create their own doc.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId && !exists(/databases/$(database)/documents/users/$(userId));
      allow delete: if request.auth.token.role == 'admin';
    }

    // Attendance:
    // - Employees can create their own attendance records.
    // - Employees can read their own attendance records.
    match /attendance/{attendanceId} {
      allow create: if request.auth.uid == request.resource.data.uid;
      allow read: if request.auth.uid == get(/databases/$(database)/documents/attendance/$(attendanceId)).data.uid;
    }

    // Leave Requests
    // - Employees can create their own leave requests.
    // - Employees can read their own leave requests.
    // - Admins can update status.
    match /leaveRequests/{reqId} {
        allow create: if request.auth.uid == request.resource.data.uid;
        allow read: if request.auth.uid == get(/databases/$(database)/documents/leaveRequests/$(reqId)).data.uid;
        allow update: if request.auth.token.role == 'admin';
    }
  }
}
