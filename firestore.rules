rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    // Checks if a user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // Securely checks if the requesting user has the 'admin' role.
    // It reads the user's own profile document from the /users collection.
    // This is safe because the rules for /users/{userId} allow users to read their own document.
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Collection Rules ---

    // Users Collection
    // Users can read their own profile. Admins can read all profiles.
    // Users can create their own profile document (on signup).
    // Users can update their own profile. Admins can update any profile.
    match /users/{userId} {
      allow get: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow list: if isAdmin();
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isSignedIn() && (request.auth.uid == userId || isAdmin());
      allow delete: if isAdmin();
    }

    // Attendance Collection
    // Users can create their own attendance records.
    // Users can read their own attendance history (via list query).
    // Admins can read all attendance records.
    match /attendance/{docId} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow read: if (isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid == resource.data.uid) || isAdmin();
      allow list: if isAdmin();
      allow update, delete: if isAdmin();
    }

    // Leave Requests Collection
    // Users can create their own leave requests.
    // Users can read their own leave requests.
    // Admins can read/update all requests.
    match /leaveRequests/{docId} {
        allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
        allow read, update: if (isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.uid == resource.data.uid) || isAdmin();
        allow delete: if isAdmin();
        allow list: if isAdmin();
    }

    // Departments Collection
    // Only admins can manage departments.
    match /departments/{docId} {
      allow read, write, delete: if isAdmin();
    }

    // Settings Collection
    // Public read for branding/landing page for login/home screens.
    // Only admins can write to settings.
    match /settings/{docId} {
        allow read: if docId in ['branding', 'landingPage', 'footer', 'announcement'] || isAdmin();
        allow write: if isAdmin();
    }
  }
}