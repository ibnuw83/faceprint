rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(uid) {
      return isAuthenticated() && request.auth.uid == uid;
    }

    match /users/{userId} {
      allow read;
      // Allow user creation for anyone
      allow create; 
      
      // Allow profile completion
      allow update: if isOwner(userId) && resource.data.isProfileComplete == false;
      
      // Allow admin to update any user
      allow update: if isAdmin();
      
      // Allow owner to update their own profile if it's already complete
      allow update: if isOwner(userId) && resource.data.isProfileComplete == true;
      
      // Allow admin to delete any user
      allow delete: if isAdmin();
    }
    
    match /departments/{departmentId} {
        // Any authenticated user can read the list of departments
        allow read: if isAuthenticated();
        // Only admin can create or delete departments
        allow write: if isAdmin();
    }

    match /settings/{settingId} {
        // Admin can change any settings
        allow write: if isAdmin();
        
        // Any authenticated user can read schedule and location for the app to function
        allow read: if isAuthenticated() && (settingId == 'location' || settingId == 'schedule');

        // Allow any authenticated user to read branding, announcement, and footer settings
        allow read: if isAuthenticated() && (settingId == 'branding' || settingId == 'announcement' || settingId == 'footer' || settingId == 'landingPage');
    }

    match /attendance/{attendanceId} {
        // Admins can read all attendance records
        allow read, delete: if isAdmin();
        
        // Employees can create their own attendance
        allow create: if isOwner(request.resource.data.uid);
        
        // Employees can read their own attendance history
        allow list: if isAuthenticated() && request.query.where.field == 'employeeId' && request.query.where.value == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employeeId;
    }
    
    match /leaveRequests/{requestId} {
        // Admin can read and update any request
        allow read, update: if isAdmin();
        
        // Users can create their own requests
        allow create: if isOwner(request.resource.data.uid);

        // Users can read their own requests
        allow read: if isOwner(get(/databases/$(database)/documents/leaveRequests/$(requestId)).data.uid);

        // User can update their own 'acknowledgedByEmployee' status
        allow update: if isOwner(get(/databases/$(database)/documents/leaveRequests/$(requestId)).data.uid)
                      && request.resource.data.keys().hasOnly(['acknowledgedByEmployee']);
    }
  }
}
