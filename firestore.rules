
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is the owner of the data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can manage any user.
      // Users can get their own data.
      allow read: if isAdmin() || isOwner(userId);
      
      // A new user whose profile is not complete can update their own document.
      allow update: if isOwner(userId) && resource.data.isProfileComplete == false;
      
      // Only admins can create or delete users through the app.
      // Note: User creation on registration is handled differently.
      allow create, delete: if isAdmin();
    }

    // Rules for the 'attendance' collection
    match /attendance/{docId} {
      // Admins can read all attendance.
      // Users can only read their own attendance records.
      allow read: if isAdmin() || (isAuthenticated() && request.query.where.size > 0 && request.query.where[0][0] == 'employeeId' && request.query.where[0][2] == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employeeId);
      
      // Authenticated users can create their own attendance records.
      allow create: if isAuthenticated() && request.resource.data.employeeId == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employeeId;

      // Only admins can delete attendance records.
      allow delete: if isAdmin();
      
      // No updates allowed to attendance records.
      allow update: if false;
    }

    // Rules for 'departments' collection
    match /departments/{deptId} {
      // All authenticated users can read the list of departments.
      allow read: if isAuthenticated();
      // Only admins can create, update, or delete departments.
      allow write: if isAdmin();
    }
    
    // Rules for 'leaveRequests' collection
    match /leaveRequests/{reqId} {
        // User can create their own request.
        allow create: if isAuthenticated() && request.resource.data.uid == request.auth.uid;
        // User can read their own requests. Admins can read all.
        allow read: if isAdmin() || (isAuthenticated() && get(/databases/$(database)/documents/leaveRequests/$(reqId)).data.uid == request.auth.uid);
        // User can update their own request if they are acknowledging a status change.
        // Admin can update any request (to approve/deny).
        allow update: if isAdmin() || (isAuthenticated() && isOwner(resource.data.uid));
        // No one can delete leave requests from the app.
        allow delete: if false;
    }

    // Rules for general app settings
    match /settings/{settingId} {
      // Location and Schedule settings are readable by any authenticated user
      // so the client can apply necessary logic (e.g., location checks, button visibility).
      allow read: if (settingId == 'location' || settingId == 'schedule' || settingId == 'branding' || settingId == 'announcement' || settingId == 'landingPage' || settingId == 'footer') && isAuthenticated();
      
      // Public landing page and footer content can be read by anyone.
      allow read: if (settingId == 'landingPage' || settingId == 'footer' || settingId == 'branding');

      // Only admins can change any settings.
      allow write: if isAdmin();
    }
  }
}
