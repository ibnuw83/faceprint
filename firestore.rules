rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check for admin role
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Settings collection:
    // - landingPage, announcement, and footer are public-read.
    // - Other settings are admin-only.
    match /settings/{settingId} {
        // Publicly readable settings for the landing page, banner, and footer
        allow read: if settingId in ['landingPage', 'announcement', 'footer'];
        // Admin-only settings
        allow read, write: if isAdmin();
    }


    // Users collection:
    // - Admins can read/write any user document.
    // - Authenticated users can read their own document.
    // - Users can complete their own profile once.
    match /users/{userId} {
      allow read, write: if isAdmin();
      allow read: if isOwner(userId);
      allow update: if isOwner(userId) && request.resource.data.isProfileComplete == true;
    }

    // Departments can be managed only by admins.
    match /departments/{deptId} {
      allow read, write, create, delete: if isAdmin();
    }

    // Attendance:
    // - Admins can read all records.
    // - Authenticated users can create their own records.
    // - Users can read their own attendance records (checked by employeeId).
    match /attendance/{attId} {
        allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
        allow read, delete: if isAdmin();
        allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.employeeId == resource.data.employeeId;
    }
    
    // Leave Requests:
    // - Admins can read/write all requests.
    // - Authenticated users can create their own requests.
    // - Users can read their own requests.
    match /leaveRequests/{reqId} {
        allow read, write: if isAdmin();
        allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
        allow read: if request.auth != null && resource.data.uid == request.auth.uid;
    }
  }
}
