
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // AUTH: Users can read their own user document. Admins can read any.
    match /users/{userId} {
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isAdmin();
      allow create: if isSignedIn();
      allow update: if isSignedIn() && isOwner(userId);
      allow delete: if isAdmin();
    }
    
    // DEPARTMENTS: Only admins can manage departments
    match /departments/{departmentId} {
        allow read, write: if isAdmin();
    }

    // SETTINGS: Any signed-in user can read, only admins can write.
    match /settings/{settingId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    // ATTENDANCE: Users can create their own records and list their own history. Admins can read all.
    match /attendance/{attendanceId} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow read, delete: if isAdmin() || (isSignedIn() && get(/databases/$(database)/documents/attendance/$(attendanceId)).data.uid == request.auth.uid);
      allow list: if isAdmin();
    }

    // LEAVE REQUESTS: Users can create/read their own. Admins can manage all.
    match /leaveRequests/{requestId} {
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow read: if isAdmin() || (isSignedIn() && get(/databases/$(database)/documents/leaveRequests/$(requestId)).data.uid == request.auth.uid);
      allow list: if isAdmin();
      allow update, delete: if isAdmin();
    }
  }
}
