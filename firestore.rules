
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Settings are publicly readable, but only writable by admins
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      // Admins can manage any user
      allow read, write: if isAdmin();
      // Users can read and update their own profile
      allow get, update: if isOwner(userId);
      // Anyone can create a user account (for registration)
      allow create: if request.auth != null;
    }

    // Departments can only be managed by admins
    match /departments/{departmentId} {
      allow read, write, delete: if isAdmin();
    }

    // Attendance collection rules
    match /attendance/{attendanceId} {
       // Admins can read all attendance records
      allow read: if isAdmin();
      // Authenticated users can create their own attendance records
      allow create: if request.auth != null;
      // Admins can delete records
      allow delete: if isAdmin();
    }
    
    // Leave Requests collection rules
    match /leaveRequests/{requestId} {
      // Admins can manage all leave requests
      allow read, write, delete: if isAdmin();
      
      // Users can create their own leave requests
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      
      // Users can read their own leave requests
      allow get, list: if isOwner(request.resource.data.uid);
    }
  }
}
