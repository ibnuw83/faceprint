
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Default implicit deny for all collections
    // match /{document=**} {
    //   allow read, write: if false;
    // }

    // PUBLIC ACCESS: Settings can be read by anyone for the public pages.
    // WRITE ACCESS: Only admins can change settings.
    match /settings/{settingId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }

    // USERS COLLECTION
    match /users/{userId} {
      // Admins can do anything to any user document
      allow read, write: if request.auth != null && isAdmin();
      // Authenticated users can read their own data
      allow get: if request.auth != null && isOwner(userId);
      // Authenticated users can update their own profile
      allow update: if request.auth != null && isOwner(userId);
    }
    
    // DEPARTMENTS COLLECTION
    match /departments/{departmentId} {
      // Only admins can manage departments
      allow read, write, delete: if request.auth != null && isAdmin();
    }

    // ATTENDANCE COLLECTION
    match /attendance/{attendanceId} {
      // Admins can read all attendance records
      allow read: if request.auth != null && isAdmin();
      // Admins can delete attendance records
      allow delete: if request.auth != null && isAdmin();
      // Authenticated users can create their own attendance records
      allow create: if request.auth != null;
    }

    // LEAVE REQUESTS COLLECTION
    match /leaveRequests/{leaveId} {
      // Admins can manage all leave requests
      allow read, write, delete: if request.auth != null && isAdmin();
      // Users can create their own leave requests
      allow create: if request.auth != null;
      // Users can read their own leave requests
      allow get: if request.auth != null && request.resource.data.uid == request.auth.uid;
      // Users can see lists of their own requests
      allow list: if request.auth != null && request.query.where.uid == request.auth.uid;
    }

  }
}
